/* Generated by Together */

/** Title:        TestProxy Description:  A package local proxy to access private classes generated by XPTest for TogetherJ */

package asi.voronoi;

import java.lang.reflect.*;
import junit.framework.*;
import junitx.framework.*;

/**
 * This proxy enables access to package private classes as well as
 * protected and private methods and fields of any class in this package.
 */
public class TestProxy extends junitx.framework.TestProxy  {
    /**
     * creates a new instance of the proxied class. This method only supports constructors without simple data types
     * as their arguments. Use <code>newInstanceWithKey</code> otherwise.
     * @param     anArgList           argument array for the constructor
     * @return a new instance of the proxied class or null
     * @exception TestAccessException if the class cannot be instantiated
     */
    public Object newInstance(Object[] anArgList) throws TestAccessException {
        try {
            return getProxiedClass().getConstructor(anArgList).newInstance(anArgList);
        }
        catch (Exception e) {
            throw new TestAccessException("could not instantiate " + getTestedClassName(), e);
        }
    }

    /**
     * creates a new instance of the proxied class. This method supports constructors with simple data types as their
     * arguments. Use <code>newInstance</code> for maintenability if the constructor has only object arguments. See
     * <code>junitx.framework.TestProxy.invokeWithKey</code> for documentation on using method keys.
     * @param     aConstructorKey     a constructor key
     * @param     anArgList           argument array for the constructor
     * @return a new instance of the proxied class or null
     * @exception TestAccessException if the class cannot be instantiated
     */
    public Object newInstanceWithKey(String aConstructorKey, Object[] anArgList) throws TestAccessException {
        try {
            return getProxiedClass().getConstructor(aConstructorKey).newInstance(anArgList);
        }
        catch (Exception e) {
            throw new TestAccessException("could not instantiate " + getTestedClassName(), e);
        }
    }
}
